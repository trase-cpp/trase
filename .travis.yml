sudo: false
dist: trusty
language: cpp

addons:
  apt:
    packages:

matrix:
  include:

    # XCode 9.3
    - os: osx
      osx_image: xcode9.3
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - CMAKE_OPTNS="-D CMAKE_BUILD_TYPE=Debug
                       -D trase_BUILD_OPENGL:BOOL=FALSE"

    # GCC 5
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - openjdk-8-jre
            - lcov
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
        - TEST_SVG=true
        - DEPLOY_GENERATED_FILES=true
        - CMAKE_OPTNS="-D trase_ENABLE_COVERAGE:BOOL=TRUE
                       -D CMAKE_BUILD_TYPE=Debug
                       -D trase_BUILD_OPENGL:BOOL=FALSE"

    # GCC 6
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - lcov
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - CMAKE_OPTNS="-D trase_ENABLE_COVERAGE:BOOL=TRUE
                       -D CMAKE_BUILD_TYPE=Debug
                       -D trase_BUILD_OPENGL:BOOL=FALSE"

    # GCC 7
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - lcov
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - CMAKE_OPTNS="-D trase_ENABLE_COVERAGE:BOOL=TRUE
                       -D CMAKE_BUILD_TYPE=Debug
                       -D trase_BUILD_OPENGL:BOOL=FALSE"

    # Clang 4.0
    - os: linux
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
        - CMAKE_OPTNS="-D trase_USE_CLANG_TIDY:BOOL=TRUE
                       -D trase_MEMCHECK:BOOL=TRUE
                       -D CMAKE_BUILD_TYPE=Debug
                       -D trase_BUILD_OPENGL:BOOL=FALSE"

    # Clang 5.0
    - os: linux
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        - CMAKE_OPTNS="-D trase_USE_CLANG_TIDY:BOOL=TRUE
                       -D trase_MEMCHECK:BOOL=TRUE
                       -D CMAKE_BUILD_TYPE=Debug
                       -D trase_BUILD_OPENGL:BOOL=FALSE"

before_install:
  - eval "${MATRIX_EVAL}"

script:
  - cmake $CMAKE_OPTNS .
  - cmake --build . -- -j2
  - ctest -j2 --output-on-failure
  - if [ "$TEST_SVG" == true ] ; then
        pip install --user html5validator;
        ~/.local/bin/html5validator *.svg --also-check-svg;
    fi

after_success:
  # Creating report
  - cd ${TRAVIS_BUILD_DIR}
  # capture coverage info
  - lcov --directory . --capture --output-file coverage.info
  # filter out system and catch headers
  - lcov --remove coverage.info '/usr/*' 'tests/catch.hpp' --output-file coverage.info
  # debug info
  - lcov --list coverage.info
  # Uploading report to CodeCov
  - bash <(curl -s https://codecov.io/bash) -X gcov || echo "Codecov did not collect coverage reports"
  # push generated files to repo
  - if [ -n "$GITHUB_API_KEY" ] && [ -n "$DEPLOY_GENERATED_FILES" ]; then
    # Clone the generated files repo and add all example and tests svg files
    git clone https://github.com/trase-cpp/generated_files.git
    cp examples/*.svg generated_files/examples
    cp tests/*.svg generated_files/tests
    cd generated_files
    git -c user.name='travis' -c user.email='travis' commit -a -m "update generated files"
    # Make sure to make the output quiet, or else the API token will leak!
    # This works because the API key can replace your password.
    git push -q https://<me>:$GITHUB_API_KEY@github.com/trase-cpp/trase master &>/dev/null
    cd ${TRAVIS_BUILD_DIR}
  fi
